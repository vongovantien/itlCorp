<?xml version="1.0"?>
<doc>
    <assembly>
        <name>eFMS.API.System</name>
    </assembly>
    <members>
        <member name="T:eFMS.API.System.Controllers.CatDepartmentController">
            <summary>
            Controller Department
            </summary>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatDepartmentController.#ctor(Microsoft.Extensions.Localization.IStringLocalizer{eFMS.API.Common.Globals.LanguageSub},eFMS.API.System.DL.IService.ICatDepartmentService)">
            <summary>
            Contructor
            </summary>
            <param name="localizer"></param>
            <param name="service"></param>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatDepartmentController.Get">
            <summary>
            Get list department
            </summary>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatDepartmentController.QueryData(eFMS.API.System.DL.Models.Criteria.CatDepartmentCriteria)">
            <summary>
            Query Data
            </summary>
            <param name="criteria"></param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatDepartmentController.Paging(eFMS.API.System.DL.Models.Criteria.CatDepartmentCriteria,System.Int32,System.Int32)">
            <summary>
            Paging
            </summary>
            <param name="criteria"></param>
            <param name="page"></param>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatDepartmentController.GetDepartmentById(System.Int32)">
            <summary>
            Get department by id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatDepartmentController.Insert(eFMS.API.System.DL.Models.CatDepartmentModel)">
            <summary>
            Insert department
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatDepartmentController.Update(eFMS.API.System.DL.Models.CatDepartmentModel)">
            <summary>
            Update department
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatDepartmentController.Delete(System.Int32)">
            <summary>
            Delete department
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatDepartmentController.GetDepartmentByOfficeId(System.Guid)">
            <summary>
            Get list department by office id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.CatDepartmentController.GetDeptTypes">
            <summary>
            Get list department type
            </summary>
            <returns></returns>
        </member>
        <member name="T:eFMS.API.System.Controllers.MenuController">
            <summary>
            Controller Menu
            </summary>
        </member>
        <member name="M:eFMS.API.System.Controllers.MenuController.#ctor(eFMS.API.System.DL.IService.ISysMenuService)">
            <summary>
            constructor
            </summary>
            <param name="menu"></param>
        </member>
        <member name="M:eFMS.API.System.Controllers.MenuController.GetMenus(System.String,System.Guid)">
            <summary>
            get menus by user and office
            </summary>
            <param name="userId"></param>
            <param name="officeId"></param>
            <returns></returns>
        </member>
        <member name="T:eFMS.API.System.Controllers.SysAuthorizationController">
            <summary>
            Controller Authorization
            </summary>
        </member>
        <member name="M:eFMS.API.System.Controllers.SysAuthorizationController.#ctor(Microsoft.Extensions.Localization.IStringLocalizer{eFMS.API.Common.Globals.LanguageSub},eFMS.API.System.DL.IService.ISysAuthorizationService,AutoMapper.IMapper,eFMS.IdentityServer.DL.UserManager.ICurrentUser)">
            <summary>
            Contructor
            </summary>
            <param name="localizer"></param>
            <param name="service"></param>
            <param name="imapper"></param>
            <param name="currUser"></param>
        </member>
        <member name="M:eFMS.API.System.Controllers.SysAuthorizationController.QueryData(eFMS.API.System.DL.Models.Criteria.SysAuthorizationCriteria)">
            <summary>
            Query Data
            </summary>
            <param name="criteria"></param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.SysAuthorizationController.Paging(eFMS.API.System.DL.Models.Criteria.SysAuthorizationCriteria,System.Int32,System.Int32)">
            <summary>
            Paging
            </summary>
            <param name="criteria"></param>
            <param name="page"></param>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.SysAuthorizationController.GetAuthorizationById(System.Int32)">
            <summary>
            Get Authorization by id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.SysAuthorizationController.Insert(eFMS.API.System.DL.Models.SysAuthorizationModel)">
            <summary>
            Insert Authorization
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.SysAuthorizationController.Update(eFMS.API.System.DL.Models.SysAuthorizationModel)">
            <summary>
            Update Authorization
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.SysAuthorizationController.Delete(System.Int32)">
            <summary>
            Delete Authorization
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:eFMS.API.System.Controllers.SysCompanyController">
            <summary>
            
            </summary>
        </member>
        <member name="M:eFMS.API.System.Controllers.SysCompanyController.GetByUserId(System.String)">
            <summary>
            get by userId
            </summary>
            <returns></returns>
        </member>
        <member name="T:eFMS.API.System.Controllers.SysGroupController">
            <summary>
            
            </summary>
        </member>
        <member name="M:eFMS.API.System.Controllers.SysGroupController.#ctor(Microsoft.Extensions.Localization.IStringLocalizer{eFMS.API.Common.Globals.LanguageSub},eFMS.API.System.DL.IService.ISysGroupService,AutoMapper.IMapper,eFMS.IdentityServer.DL.UserManager.ICurrentUser)">
            <summary>
            constructor
            </summary>
            <param name="localizer"></param>
            <param name="groupService"></param>
            <param name="imapper"></param>
            <param name="currUser"></param>
        </member>
        <member name="M:eFMS.API.System.Controllers.SysGroupController.Get">
            <summary>
            get all groups
            </summary>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.SysGroupController.Query(eFMS.API.System.DL.Models.Criteria.SysGroupCriteria)">
            <summary>
            get list of groups by criteria
            </summary>
            <param name="criteria"></param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.SysGroupController.Paging(eFMS.API.System.DL.Models.Criteria.SysGroupCriteria,System.Int32,System.Int32)">
            <summary>
            paging and query list of groups by criteria
            </summary>
            <param name="criteria"></param>
            <param name="page"></param>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.SysGroupController.Get(System.Int16)">
            <summary>
            get detail group by id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.SysGroupController.Add(eFMS.API.System.DL.Models.SysGroupModel)">
            <summary>
            add new group
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.SysGroupController.Update(eFMS.API.System.DL.Models.SysGroupModel)">
            <summary>
            update an existed group
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.SysGroupController.Delete(System.Int16)">
            <summary>
            delete an existed group
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.SysOfficeController.GetAll">
            <summary>
            get all data
            </summary>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.SysOfficeController.GetByUserId(System.String)">
            <summary>
            get by userId
            </summary>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.SysOfficeController.Paging(eFMS.API.System.DL.Models.Criteria.SysOfficeCriteria,System.Int32,System.Int32)">
            <summary>
            get and paging the list of office
            </summary>
            <param name="criteria">search conditions</param>
            <param name="page">page to retrieve data</param>
            <param name="size">number items per page</param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.SysOfficeController.Get(eFMS.API.System.DL.Models.Criteria.SysOfficeCriteria)">
            <summary>
            get the list of branch
            </summary>
        </member>
        <member name="M:eFMS.API.System.Controllers.SysOfficeController.Delete(System.Guid)">
            <summary>
            delete an existed item
            </summary>
            <param name="id">id of data that need to delete</param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.SysOfficeController.Put(eFMS.API.System.Models.SysOfficeEditModel)">
            <summary>
            update an existed item
            </summary>
            <param name="id">id of data that need to update</param>
            <param name="model">object to update</param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.SysOfficeController.Post(eFMS.API.System.Models.SysOfficeEditModel)">
            <summary>
            add new office
            </summary>
            <param name="model">object to add</param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.SysOfficeController.GetOfficeBy(System.Guid)">
            <summary>
            get office by companyId
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:eFMS.API.System.Controllers.SysOfficeController.GetBy(System.Guid)" -->
        <!-- Badly formed XML comment ignored for member "M:eFMS.API.System.Controllers.SysOfficeController.GetLocationById(System.Guid)" -->
        <member name="T:eFMS.API.System.Controllers.SysPermissionGeneralController">
            <summary>
            
            </summary>
        </member>
        <member name="M:eFMS.API.System.Controllers.SysPermissionGeneralController.#ctor(eFMS.API.System.DL.IService.ISysPermissionSampleService,Microsoft.Extensions.Localization.IStringLocalizer{eFMS.API.Common.Globals.LanguageSub})">
            <summary>
            constructor
            </summary>
            <param name="generalService"></param>
            <param name="localizer"></param>
        </member>
        <member name="M:eFMS.API.System.Controllers.SysPermissionGeneralController.Get">
            <summary>
            get all list of permission General
            </summary>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.SysPermissionGeneralController.Query(eFMS.API.System.DL.Models.Criteria.SysPermissionGeneralCriteria)">
            <summary>
            get list of permission general by criteria
            </summary>
            <param name="criteria"></param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.SysPermissionGeneralController.GetDataCombobox">
            <summary>
            get data combobox
            </summary>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.SysPermissionGeneralController.Get(System.Nullable{System.Guid})">
            <summary>
            get an existed item by id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.SysPermissionGeneralController.Add(eFMS.API.System.DL.Models.SysPermissionSampleModel)">
            <summary>
            add new systemGeneral
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.SysPermissionGeneralController.Update(eFMS.API.System.DL.Models.SysPermissionSampleModel)">
            <summary>
            Update department
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.SysPermissionGeneralController.Delete(System.Guid)">
            <summary>
            delete an existed item
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.SysPermissionGeneralController.GetLevelPermissions">
            <summary>
            get all level permission
            </summary>
            <returns></returns>
        </member>
        <member name="T:eFMS.API.System.Controllers.SysPermissionSampleGeneralController">
            <summary>
            Controller Department
            </summary>
        </member>
        <member name="M:eFMS.API.System.Controllers.SysPermissionSampleGeneralController.#ctor(eFMS.API.System.DL.IService.ISysPermissionSampleGeneralService)">
            <summary>
            constructor
            </summary>
            <param name="permissionDetail"></param>
        </member>
        <member name="M:eFMS.API.System.Controllers.SysPermissionSampleGeneralController.GetBy(System.Guid)">
            <summary>
            get permission detail by permission
            </summary>
            <param name="permissionId">if add new : permissionId = 0 ---/--- update: permissionId > 0</param>
            <returns></returns>
        </member>
        <member name="T:eFMS.API.System.Controllers.SysPermissionSampleSpecialController">
            <summary>
            Controller Department
            </summary>
        </member>
        <member name="M:eFMS.API.System.Controllers.SysPermissionSampleSpecialController.#ctor(Microsoft.Extensions.Localization.IStringLocalizer{eFMS.API.Common.Globals.LanguageSub},eFMS.API.System.DL.IService.ISysPermissionSampleSpecialService)">
            <summary>
            
            </summary>
            <param name="localizer"></param>
            <param name="peSpecialServiceRepoy"></param>
        </member>
        <member name="M:eFMS.API.System.Controllers.SysPermissionSampleSpecialController.GetBy(System.Nullable{System.Guid})">
            <summary>
            get list by permission Id
            </summary>
            <param name="permissionId"></param>
            <returns></returns>
        </member>
        <member name="T:eFMS.API.System.Controllers.SysRoleController">
            <summary>
            Controller Department
            </summary>
        </member>
        <member name="M:eFMS.API.System.Controllers.SysRoleController.#ctor(Microsoft.Extensions.Localization.IStringLocalizer{eFMS.API.Common.Globals.LanguageSub},eFMS.API.System.DL.IService.ISysRoleService)">
            <summary>
            Contructor
            </summary>
            <param name="localizer"></param>
            <param name="service"></param>
        </member>
        <member name="M:eFMS.API.System.Controllers.SysRoleController.Get">
            <summary>
            get all role
            </summary>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.SysUserController.Add(eFMS.API.System.DL.Models.SysUserModel)">
            <summary>
            add new group
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.SysUserController.Update(eFMS.API.System.DL.Models.SysUserModel)">
            <summary>
            update an existed group
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:eFMS.API.System.Controllers.SysUserController.GetBy(System.String)" -->
        <member name="M:eFMS.API.System.Controllers.SysUserController.ResetPassword(System.String)">
            <summary>
            reset password of user to default
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.SysUserController.DownloadExcel">
            <summary>
            download file excel from server
            </summary>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.SysUserController.UploadFile(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            read data from file excel
            </summary>
            <param name="uploadedFile"></param>
            <returns></returns>
        </member>
        <member name="T:eFMS.API.System.Controllers.SysUserLevelController">
            <summary>
            
            </summary>
        </member>
        <member name="M:eFMS.API.System.Controllers.SysUserLevelController.#ctor(eFMS.API.System.DL.IService.ISysUserLevelService,Microsoft.Extensions.Localization.IStringLocalizer{eFMS.API.System.DL.Common.SystemLanguageSub},eFMS.IdentityServer.DL.UserManager.ICurrentUser,AutoMapper.IMapper)">
            <summary>
            constructor
            </summary>
            <param name="sysUserLevel"></param>
            <param name="localizer"></param>
        </member>
        <member name="M:eFMS.API.System.Controllers.SysUserLevelController.GetByLevel(System.Int16)">
            <summary>
            get by group id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.SysUserLevelController.Get(System.Int32)">
            <summary>
            get by id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.SysUserLevelController.GetByUserId(System.String)">
            <summary>
            get by userid
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.SysUserLevelController.Add(eFMS.API.System.DL.Models.SysUserLevelModel)">
            <summary>
            
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.SysUserLevelController.AddUser(System.Collections.Generic.List{eFMS.API.System.DL.Models.SysUserLevelModel})">
            <summary>
            add user to office
            </summary>
            <param name="users"></param>
            <returns></returns>
            
        </member>
        <member name="M:eFMS.API.System.Controllers.SysUserLevelController.AddUserToCompany(System.Collections.Generic.List{eFMS.API.System.DL.Models.SysUserLevelModel})">
            <summary>
            add user to company
            </summary>
            <param name="users"></param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.SysUserLevelController.Update(eFMS.API.System.DL.Models.SysUserLevelModel)">
            <summary>
            update an existed item
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.SysUserLevelController.Delete(System.Int32)">
            <summary>
            delete an existed item
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.SysUserLevelController.Get(eFMS.API.System.DL.Models.Criteria.SysUserLevelCriteria)">
            <summary>
            Query user level
            </summary>
            <param name="criteria"></param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.SysUserLevelController.AddUserToDepartment(System.Collections.Generic.List{eFMS.API.System.DL.Models.SysUserLevelModel})">
            <summary>
            add user to department
            </summary>
            <param name="users"></param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.SysUserLevelController.AddUserToGroup(System.Collections.Generic.List{eFMS.API.System.DL.Models.SysUserLevelModel})">
            <summary>
            add user to group
            </summary>
            <param name="users"></param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.SysUserLevelController.GetUsersByType(eFMS.API.System.DL.Models.Criteria.UserLevelCriteria)">
            <summary>
            Get user by type
            </summary>
            <param name="criteria"></param>
            <returns></returns>
        </member>
        <member name="T:eFMS.API.System.Controllers.SysUserPermissionController">
            <summary>
            Controller Department
            </summary>
        </member>
        <member name="M:eFMS.API.System.Controllers.SysUserPermissionController.#ctor(eFMS.API.System.DL.IService.ISysUserPermissionService,Microsoft.Extensions.Localization.IStringLocalizer{eFMS.API.Common.Globals.LanguageSub},eFMS.IdentityServer.DL.UserManager.ICurrentUser)">
            <summary>
            constructor
            </summary>
            <param name="userPermission"></param>
            <param name="localizer"></param>
        </member>
        <member name="M:eFMS.API.System.Controllers.SysUserPermissionController.GetBy(System.String,System.Guid)">
            <summary>
            Get by user and office
            </summary>
            <param name="userId"></param>
            <param name="officeId"></param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.SysUserPermissionController.Permissions(System.String)">
            <summary>
            get permission by current user + route
            </summary>
            <param name="route"></param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.SysUserPermissionController.GetBy(System.Guid)">
            <summary>
            get detail of permission by user permission id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.SysUserPermissionController.GetByUserId(System.String)">
            <summary>
            get an existed item by user id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.SysUserPermissionController.Delete(System.Guid)">
            <summary>
            delete
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:eFMS.API.System.Controllers.SysUserPermissionController.Update(eFMS.API.System.DL.Models.SysUserPermissionModel)">
            <summary>
            Update User Permission
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="T:eFMS.API.System.Infrastructure.Common.CacheEntity">
            <summary>
            
            </summary>
        </member>
    </members>
</doc>
